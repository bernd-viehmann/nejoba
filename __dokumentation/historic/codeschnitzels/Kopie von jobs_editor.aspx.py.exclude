#  
# editor.aspx.py 
#  
# the webform is used for creating new job offers for the community. user can define the location, the typ of the job and the time of action
#  
#
#  03.10.2012   bevie    initial realese
#  13.01.2013   bevie    redesign to new Item_class partition
#
#
#  
from System.Web.Configuration import *
import System.DateTime
import System.Drawing.Color
import System.Web.UI.WebControls
import System.Guid
import traceback                    # for better exception understanding
import re                           # for finding the taggs
import mongoDbMgr                   # father : the acces to the database

from srvcs.ItemJobRoot import *
from srvcs.tls_UiHelper import LocDefiner

lcDfnr = LocDefiner( Page )            # the helper class for location-stuff
tool = ItemJobRoot( Page )



# ------------------------------------------------------------------------------------------------------------------------------------------------##__aspn.net ------------------------------------------------
# ***********************************************************************************************************************************************
# Page_Load        : initializer of the webpage
#
# 18.03.2012  - bervie -     initial realese
# ***********************************************************************************************************************************************
def Page_Load(sender, e):
    try:
        # hide the main-user-interface after a button-click and show  a please-wait sedativ
        tool.ui.getCtrlTree( Page.Master )
        tool.ui.hideFormAfterClick()

        tool.errorMessage('')

        if( not Page.IsPostBack ):
            # user must be logged in
            tool.usrDt.checkUserRigths( Page, 'free' )

            # fill locations-dropdown
            #locations = tool.usrDt.getItem('cities')
            #tool.log.w2lgDvlp( ' Location for dropdown : ' + unicode(locations) )
            #selLocations = tool.ui.getCtrl('sel_lctn')
            #tool.fillUserLocations( selLocations, locations )

            # fill the job-type-dropdown
            selTypeOfJob = tool.ui.getCtrl('sel_type')
            tool.fillJobTypes(selTypeOfJob, 'DE')

            # store the type to select in the job-dropdown
            typeOfJob = Page.Request.QueryString['class']
            if typeOfJob:
                selTypeOfJob.SelectedValue = typeOfJob
                Page.ViewState['JOB_TYPE'] = typeOfJob

        # added 18.11.2013 bervie 
        # the location-select is currently not implemented for the editors.
        # this will be done later
        chngDiv = tool.ui.getCtrl('div_slct_loctn')
        chngDiv.Attributes["style"] = " display: none";
        if tool.usrDt.userDict.has_key('LCDFNR_UIP_NICENAME'):
            tool.ui.getCtrl('txbx_location').Text = tool.usrDt.userDict['LCDFNR_UIP_NICENAME'].ToString()
        # added 18.11.2013 bervie 

    except Exception,e:
        tool.log.w2lgError(traceback.format_exc())


# ***********************************************************************************************************************************************
# Page_PreRender    : initializer after button_click
#
# 18.11.2013  - bervie -     initial realese
# ***********************************************************************************************************************************************
def Page_PreRender(sender, e):
    try:
        # insert curretn location from the session-cache
        lcDfnr.uiInitLocIntfc()

    except Exception,e:
        tool.log.w2lgError(traceback.format_exc())
        return



# ------------------------------------------------------------------------------------------------------------------------------------------------##__handler ------------------------------------------------
# ***********************************************************************************************************************************************
# usrLoggedIn      : called after user succesfully logged in
#
# 18.11.2012  - bervie -     initial realese
# ***********************************************************************************************************************************************
def HandlBtnClick(sender, e):
    try:
        urlNext = None

        # button for changing session-stored location was pressed  18.11.2013
        if sender.ID == 'btn_select_slct_loctn':
            countryCode     = tool.ui.getCtrl('sel_country').SelectedValue 
            cityIdentifier  = tool.ui.getCtrl('txbx_city').Text
            lcDfnr.setLocByInpt( countryCode , cityIdentifier ) 

            if lcDfnr.getValidLoctn() == False:
                tool.errorMessage(' <br />Es wurde keine Stadt oder Postleitzahl gefunden! <br />Hast du das richtige Land ausgew&auml;hlt?<br />')
                return False
            else:
                lcDfnr.saveParams()

        if sender.ID == 'btn_Save':
            # was all needed stuff given?
            if checkInput() is False:
                return

            # changed 18.11.2013 : the dropdown now is replaced by an hidden textfield : txbx_jobType
            #                      this textedit is filled by javascript 
            #
            #
            newId = tool.save()

            urlNext = WebConfigurationManager.AppSettings['ViewDetailForm'] + '?item=' + unicode( newId )
            tool.log.w2lgDvlp( ' jobs_editor_save redirects to  : ' + unicode(urlNext) )


    except Exception,e:
        tool.log.w2lgError(traceback.format_exc())

    if urlNext != None :
        Response.Redirect( Page.ResolveUrl( urlNext ) )




# ***********************************************************************************************************************************************
# checkInput : check users input jobtype must be selcted
#
# 29.11.2011    bervie  initial realese
# 08.02.2013    bervie  removed txtMain-Check on wish of stefan. user should be able to use only the header as complete text
# ***********************************************************************************************************************************************
def checkInput():
    try:
        if len(tool.ui.getCtrl('txbx_jobType').Text) < 1:
            errStr = tool.ui.getCtrl('msg_slectJobType').Text
            errStr += tool.ui.getCtrl('msg_errorfooter').Text
            tool.errorMessage( errStr )
            return False
        

        if len(tool.ui.getCtrl('txbHeader').Text) < 1:
            errStr = tool.ui.getCtrl('txbHeader').Text  
            errStr += tool.ui.getCtrl('msg_errorfooter').Text
            tool.errorMessage( errStr )
            return False

        #
        # check if we have a location in the session-cache
        # 
        if mongoID in Sessioncache:
            errStr = tool.ui.getCtrl('msg_missingLocation').Text  
            tool.errorMessage( errStr )
            return False
    
        return True


    except Exception,e:
        tool.log.w2lgError(traceback.format_exc())


# ***********************************************************************************************************************************************
# defineJobType : read jobtype from UI and return a value to store in the database
#
# 08.02.2013    bervie  removed txtMain-Check on wish of stefan. user should be able to use only the header as complete text
# ***********************************************************************************************************************************************
def defineJobType():
    try:
        return True


    except Exception,e:
        tool.log.w2lgError(traceback.format_exc())

#    <add key="jobType_DE" value='Bitte w?hlen;Haus;Garten;Handwerk;Menschen;Bringdienste;K?rperpflege;Haustiere;Kinder;PC und Internet;Transport;Heimarbeit;Bildung;B?ro;Auto und Motorad;Freizeit;Sonstiges' />
#    <add key="jobTypeValue" value='-1;?*JTD01_home;?*JTD01_garden;?*JTD01_craft;?*JTD01_human2human;?*JTD01_bringservice;?*JTD01_personalhygiene;?*JTD01_pets;?*JTD01_children;?*JTD01_computer;?*JTD01_transport;?*JTD01_homework;?*JTD01_education;?*JTD01_office;?*JTD01_vehicles;?*JTD01_leisure;?*JTD01_notspecified' />
